#include "pch.h"
#include "文件.h"
#include "引用.h"
#include "Address.h"
#include "数组.h"
#include "公告.h"
#include "游戏CALL.h"
#include "顺图.h"
#include "判断.h"
#include "配置.h"
#include "功能.h"

typedef vector<unsigned char>       Bytes;

ULONG 自身玉荣力()
{
	未央结构 未央;
	未央.物品数量 = NULL;
	未央.背包指针 = *(ULONG64*)(玉荣背包);
	未央.首地址 = *(ULONG64*)(未央.背包指针 + 背包指针偏移) + 玉荣偏移;
	for (未央.次数 = 0; 未央.次数 < 8; 未央.次数++)
	{
		未央.物品地址 = *(ULONG64*)(未央.首地址 + 未央.次数 * 8);
		if (未央.物品地址)
		{
			未央.物品数量 = 未央.物品数量 + *(ULONG*)(未央.物品地址 + 玉荣力偏移);
		}
	}
	return 未央.物品数量;
}

ULONG 玉荣力匹配司南(DWORD 玉荣力值)
{
	未央结构 未央;
	未央.背包指针 = *(ULONG64*)(司南背包);
	未央.首地址 = *(ULONG64*)(未央.背包指针 + 背包指针偏移);
	for (未央.次数 = 0; 未央.次数 < 100; 未央.次数++)
	{
		未央.物品地址 = *(ULONG64*)(未央.首地址 + 未央.次数 * 8);
		if (未央.物品地址)
		{
			未央.物品名称 = (wchar_t*)*(ULONG64*)(未央.物品地址 + 装备名称);
			未央.交易类型 = *(ULONG*)(未央.物品地址 + 物品交易类型);
			未央.司南类型 = *(ULONG*)(*(ULONG64*)(未央.物品地址 + 592) + 244);  /* 2组队   0单人 */
			if (未央.交易类型 > 0)   /*只要是不能交易的都刷*/
			{
				if (wcsstr(未央.物品名称, L"试炼") != NULL)
				{
					continue;
				}
				if (wcsstr(未央.物品名称, L"损坏") != NULL)
				{
					continue;
				}

				if (未央.司南类型 == 2)
				{
					continue;
				}

				if (玉荣力值 >= 900)
				{
					return 未央.次数;
				}
				else
				{
					if (wcsstr(未央.物品名称, L"17阶") != NULL)
					{
						if (玉荣力值 >= 800)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"16阶") != NULL)
					{
						if (玉荣力值 >= 750)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"15阶") != NULL)
					{
						if (玉荣力值 >= 700)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"14阶") != NULL)
					{
						if (玉荣力值 >= 650)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"13阶") != NULL)
					{
						if (玉荣力值 >= 600)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"12阶") != NULL)
					{
						if (玉荣力值 >= 500)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"11阶") != NULL)
					{
						if (玉荣力值 >= 400)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"10阶") != NULL)
					{
						if (玉荣力值 >= 300)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"9阶") != NULL)
					{
						if (玉荣力值 >= 250)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"8阶") != NULL)
					{
						if (玉荣力值 >= 200)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"7阶") != NULL)
					{
						if (玉荣力值 >= 150)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"6阶") != NULL)
					{
						if (玉荣力值 >= 120)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"5阶") != NULL)
					{
						if (玉荣力值 >= 80)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"4阶") != NULL)
					{
						if (玉荣力值 >= 30)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"3阶") != NULL)
					{
						if (玉荣力值 >= 10)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"2阶") != NULL)
					{
						if (玉荣力值 >= 1)
						{
							return 未央.次数;
						}
						continue;
					}
					else if (wcsstr(未央.物品名称, L"1阶") != NULL)
					{
						if (玉荣力值 >= 0)
						{
							return 未央.次数;
						}
						continue;
					}
				}

			}

		}
	}
	return -1;
}

未央结构 最大玉荣(ULONG 玉荣颜色)
{
	ULONG64 一级地址, 二级地址, 玉荣指针;

	ULONG 交易类型, 次数;

	未央结构 当前玉荣, 临时玉荣;

	当前玉荣.物品数值 = 0;

	一级地址 = 读长整数(辟邪玉背包);
	二级地址 = 读长整数(一级地址 + 背包指针偏移);
	次数 = 99;
	while (次数 <= 199)
	{
		玉荣指针 = 读长整数(二级地址 + 次数 * 8);

		交易类型 = 读整数型(玉荣指针 + 物品交易类型);

		if (交易类型 != 0)
		{
			临时玉荣.物品数值 = 读整数型(玉荣指针 + 玉荣力偏移);
			临时玉荣.物品代码 = 读整数型(玉荣指针 + 装备代码);
			临时玉荣.物品指针 = 玉荣指针;
			临时玉荣.物品位置 = 次数;
			if (临时玉荣.物品数值 > 当前玉荣.物品数值)
			{
				if (玉荣颜色 == 1)//红色位置
				{
					if (临时玉荣.物品代码 == 400410175 || 临时玉荣.物品代码 == 400410004 || 临时玉荣.物品代码 == 400410005)
					{
						当前玉荣 = 临时玉荣;
					}
				}
				if (玉荣颜色 == 2)//绿色位置
				{
					if (临时玉荣.物品代码 == 400410182 || 临时玉荣.物品代码 == 400410004 || 临时玉荣.物品代码 == 400410007)
					{
						当前玉荣 = 临时玉荣;
					}
				}
				if (玉荣颜色 == 3)//蓝色位置
				{
					if (临时玉荣.物品代码 == 400410183 || 临时玉荣.物品代码 == 400410007 || 临时玉荣.物品代码 == 400410005)
					{
						当前玉荣 = 临时玉荣;
					}
				}
			}
		}

		次数++;
	}

	return 当前玉荣;
}

void 玉荣穿戴()
{
	ULONG64 一级地址, 二级地址, 玉荣指针;

	ULONG 临时数值, 次数;

	未央结构 玉荣数值;

	一级地址 = 读长整数(辟邪玉背包);
	二级地址 = 读长整数(一级地址 + 背包指针偏移);
	次数 = 200;
	while (次数 <= 208)
	{
		玉荣指针 = 读长整数(二级地址 + 次数 * 8);
		临时数值 = 读整数型(玉荣指针 + 玉荣力偏移);
		if (次数 == 201 || 次数 == 202 || 次数 == 203)//红色位置
		{
			玉荣数值 = 最大玉荣(1);
		}
		if (次数 == 207 || 次数 == 208)//绿色位置
		{
			玉荣数值 = 最大玉荣(2);
		}
		if (次数 == 204 || 次数 == 205 || 次数 == 206)//蓝色位置
		{
			玉荣数值 = 最大玉荣(3);
		}
		if (玉荣数值.物品数值 > 临时数值)
		{
			玉荣Call(次数, 玉荣数值.物品位置); //在试试这个

			神话公告(L"穿戴玉荣：" + 到文本(玉荣数值.物品代码));
			神话公告(L"玉荣数值：" + 到文本(玉荣数值.物品数值));
			神话公告(L"玉荣位置：" + 到文本(玉荣数值.物品位置));

		}

		次数++;
	}

}

bool 是否未央柱子()
{
	遍历数据 未央;
	未央.人物指针 = 读长整数(人物基址);
	未央.地图指针 = 读长整数(未央.人物指针 + 地图偏移);
	未央.首地址 = 读长整数(未央.地图指针 + 地图开始2);
	未央.尾地址 = 读长整数(未央.地图指针 + 地图结束2);
	未央.遍历数量 = (ULONG)((未央.尾地址 - 未央.首地址) / 8);
	for (未央.遍历次数 = NULL; 未央.遍历次数 < 未央.遍历数量; 未央.遍历次数++)
	{
		未央.遍历指针 = 读长整数(未央.首地址 + 未央.遍历次数 * 8);
		未央.遍历类型 = 读整数型(未央.遍历指针 + 类型偏移);
		未央.遍历代码 = 读整数型(未央.遍历指针 + 代码偏移);
		if (取坐标Call(未央.遍历指针, 0) > 0 && 取坐标Call(未央.遍历指针, 1) > 0)
		{
			if (未央.遍历代码 == 407001243 || 未央.遍历代码 == 407001241 || 未央.遍历代码 == 407001242 || 未央.遍历代码 == 407001240 || 未央.遍历代码 == 490002230 || 全局.柱子次数 < 2)
			{
				全局.柱子次数++;

				漂移Call(取坐标Call(未央.遍历指针, 0), 取坐标Call(未央.遍历指针, 1), 0);


				return true;
			}
		}

	}

	return false;
}

void 未央顺图()
{
	if (全局.可以顺图 == false)
	{
		return;
	}
	if (取是否制裁() == false)
	{
		if (读配置(配置.拾取方式) == 1 || 读配置(配置.拾取方式) == 2)
		{
			++全局.拾取次数;
			if (全局.拾取次数 < 10)
			{
				if (是否有物品() == true)
				{
					拾取遍历();
					return;
				}
			}
		}
	}
	/*
	ULONG64 房间指针, 时间指针, 门型指针;
	LPCTSTR 获取地图名称;
	房间指针 = 读长整数(房间编号);
	时间指针 = 读长整数(房间指针 + 时间基址);
	门型指针 = 读长整数(时间指针 + 门型偏移);
	获取地图名称 = (wchar_t*)读长整数(门型指针 + 地图名称);
	*/
	if (收包.参_副本名称 == L"1重沧池竹林" || 收包.参_副本名称 == L"2重沧池竹林" || 收包.参_副本名称 == L"3重沧池竹林" || 收包.参_副本名称 == L"4重沧池竹林" || 收包.参_副本名称 == L"5重沧池竹林")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(2);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(3);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 1)
		{
			if (全局.到下面的房间 == false)
			{
				漂移过图(3);
			}
			if (全局.到下面的房间 == true)
			{
				漂移过图(1);
			}
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 2)
		{
			全局.到下面的房间 = true;
			漂移过图(2);
		}
	}
	else if (收包.参_副本名称 == L"1重残月宫阙" || 收包.参_副本名称 == L"2重残月宫阙" || 收包.参_副本名称 == L"3重残月宫阙" || 收包.参_副本名称 == L"4重残月宫阙" || 收包.参_副本名称 == L"5重残月宫阙")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 1)
		{
			if (全局.到下面的房间 == false && 全局.最近顺图 == false)
			{
				漂移过图(3);
			}
			if (全局.到下面的房间 == true && 全局.最近顺图 == false)
			{
				漂移过图(1);
			}
			if (全局.最近顺图 == true)
			{
				漂移过图(2);
			}
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 2)
		{
			全局.到下面的房间 = true;

			漂移过图(2);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 1)
		{
			全局.最近顺图 = true;

			漂移过图(0);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 3 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(3);
		}

	}
	else if (收包.参_副本名称 == L"1重幻境前殿" || 收包.参_副本名称 == L"2重幻境前殿" || 收包.参_副本名称 == L"3重幻境前殿" || 收包.参_副本名称 == L"4重幻境前殿" || 收包.参_副本名称 == L"5重幻境前殿")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 1)
		{
			if (全局.到下面的房间 == false)
			{
				漂移过图(3);
			}
			if (全局.到下面的房间 == true)
			{
				漂移过图(1);
			}
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 2)
		{
			全局.到下面的房间 = true;
			漂移过图(2);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 1)
		{
			if (全局.最近顺图 == false)
			{
				漂移过图(2);
			}
			else
			{
				漂移过图(1);
			}
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 0)
		{
			全局.最近顺图 = true;
			漂移过图(3);
		}
	}
	else if (收包.参_副本名称 == L"1重未央之脊" || 收包.参_副本名称 == L"2重未央之脊" || 收包.参_副本名称 == L"3重未央之脊" || 收包.参_副本名称 == L"4重未央之脊" || 收包.参_副本名称 == L"5重未央之脊")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 3 && 收包.参_当前坐标.y == 1)
		{
			if (全局.最近顺图 == false)
			{
				漂移过图(2);
			}
			else
			{
				漂移过图(1);
			}
		}
		if (收包.参_当前坐标.x == 3 && 收包.参_当前坐标.y == 0)
		{
			全局.最近顺图 = true;
			漂移过图(3);
		}
	}
	else if (收包.参_副本名称 == L"6重幻境前殿" || 收包.参_副本名称 == L"7重幻境前殿" || 收包.参_副本名称 == L"8重幻境前殿" || 收包.参_副本名称 == L"9重幻境前殿" || 收包.参_副本名称 == L"10重幻境前殿")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 1)
		{
			if (全局.到下面的房间 == false)
			{
				漂移过图(3);
			}
			if (全局.到下面的房间 == true)
			{
				漂移过图(1);
			}
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 2)
		{
			全局.到下面的房间 = true;
			if (全局.最近顺图 == false)
			{
				漂移过图(1);
			}
			else
			{
				漂移过图(2);
			}
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 2)
		{
			全局.最近顺图 = true;
			漂移过图(0);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 1)
		{
			if (全局.最近顺图 = true)
			{
				漂移过图(2);
			}
			else
			{
				漂移过图(1);
			}
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 0)
		{
			全局.最近顺图 = false;
			if (全局.到下面的房间 == true)
			{
				漂移过图(0);
			}
			else
			{
				漂移过图(3);
			}
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 0)
		{
			全局.到下面的房间 = false;
			漂移过图(1);
		}
	}
	else if (收包.参_副本名称 == L"6重残月宫阙" || 收包.参_副本名称 == L"7重残月宫阙" || 收包.参_副本名称 == L"8重残月宫阙" || 收包.参_副本名称 == L"9重残月宫阙" || 收包.参_副本名称 == L"10重残月宫阙")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 1)
		{
			if (全局.到下面的房间 == false && 全局.最近顺图 == false)
			{
				漂移过图(3);
			}
			if (全局.到下面的房间 == true && 全局.最近顺图 == false)
			{
				漂移过图(1);
			}
			if (全局.最近顺图 == true)
			{
				漂移过图(2);
			}
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 2)
		{
			全局.到下面的房间 = true;
			漂移过图(2);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 1)
		{
			全局.最近顺图 = true;
			漂移过图(0);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 3 && 收包.参_当前坐标.y == 0)
		{
			if (全局.到下面的房间 == true)
			{
				漂移过图(1);
			}
			else
			{
				漂移过图(3);
			}
		}
		if (收包.参_当前坐标.x == 4 && 收包.参_当前坐标.y == 0)
		{
			全局.到下面的房间 = false;
			漂移过图(0);
		}
	}
	else if (收包.参_副本名称 == L"6重沧池竹林" || 收包.参_副本名称 == L"7重沧池竹林" || 收包.参_副本名称 == L"8重沧池竹林" || 收包.参_副本名称 == L"9重沧池竹林" || 收包.参_副本名称 == L"10重沧池竹林")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(2);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 3 && 收包.参_当前坐标.y == 0)
		{
			漂移过图(3);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 1)
		{
			全局.到下面的房间 = true;
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 3 && 收包.参_当前坐标.y == 2)
		{
			全局.最近顺图 = true;
			漂移过图(2);
		}
		if (收包.参_当前坐标.x == 3 && 收包.参_当前坐标.y == 1)
		{
			if (全局.到下面的房间 == false && 全局.最近顺图 == false)
			{
				漂移过图(0);
			}
			if (全局.到下面的房间 == true && 全局.最近顺图 == false)
			{
				漂移过图(3);
			}
			if (全局.最近顺图 == true)
			{
				漂移过图(1);
			}
		}
	}
	else if (收包.参_副本名称 == L"6重未央之脊" || 收包.参_副本名称 == L"7重未央之脊" || 收包.参_副本名称 == L"8重沧池竹林" || 收包.参_副本名称 == L"9重未央之脊" || 收包.参_副本名称 == L"10重沧池竹林")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 1 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 1)
		{
			if (全局.最近顺图 == false)
			{
				漂移过图(3);
			}
			else
			{
				漂移过图(1);
			}
		}
		if (收包.参_当前坐标.x == 2 && 收包.参_当前坐标.y == 2)
		{
			全局.最近顺图 = true;
			漂移过图(2);
		}
		if (收包.参_当前坐标.x == 3 && 收包.参_当前坐标.y == 1)
		{
			漂移过图(1);
		}
		if (收包.参_当前坐标.x == 4 && 收包.参_当前坐标.y == 1)
		{
			if (全局.到下面的房间 == false)
			{
				漂移过图(2);
			}
			else
			{
				漂移过图(1);
			}
		}
		if (收包.参_当前坐标.x == 4 && 收包.参_当前坐标.y == 0)
		{
			全局.到下面的房间 = true;
			漂移过图(3);
		}
	}
	else if (收包.参_副本名称 == L"1阶_未央幻境_试炼" || 收包.参_副本名称 == L"2阶_未央幻境_试炼" || 收包.参_副本名称 == L"3阶_未央幻境_试炼" || 收包.参_副本名称 == L"4阶_未央幻境_试炼" || 收包.参_副本名称 == L"5阶_未央幻境_试炼")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 2)
		{
			漂移过图(2);
		}
	}
	else if (收包.参_副本名称 == L"6阶_未央幻境_试炼" || 收包.参_副本名称 == L"7阶_未央幻境_试炼" || 收包.参_副本名称 == L"8阶_未央幻境_试炼" || 收包.参_副本名称 == L"9阶_未央幻境_试炼" || 收包.参_副本名称 == L"10阶_未央幻境_试炼")
	{
		if (收包.参_当前坐标.x == 0 && 收包.参_当前坐标.y == 2)
		{
			漂移过图(2);
		}
	}
	else
	{
		顺图寻路();
	}
}